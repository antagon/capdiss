version 0.3.0
-------------

* Capdiss table identificator is now lower-case ('Capdiss' => 'capdiss').

* Running an inline source code with argument '-e, --source' code is not
supported anymore.

* Argument '-f, --file' accepts pcap file instead of lua script file.

* Script file (or name) can only be specified by non-option argument, and each
instance of the program can run only one script.

* Pass arguments to Lua script specified on command line.

* Change command line argument '-t, --filter' => '-F, --filter'.

* Pass filename and link-type as parameters to function 'capdiss.begin'.

* Parameter order for method 'capdiss.each' has changed. Pass frame data
first, followed by a frame timestamp and at last a frame number.

* Frame timestamp is now in microseconds.

* Support scripts written using Lua 5.2 module conventions.

* Search scripts in LUA_PATH as Lua function 'require' would do.

* Set global variable _CAPDISS_VERSION.

* Set global variable _OS.

* Add support for new function 'sigaction' which, if defined, is triggered
after a signal is delivered to capdiss. The function takes one parameter, the
signal number.

* Allow optional static linking with Lua 5.2 when building capdiss.

* Changes that allow portability to MS Windows. Makefile included.

version 0.2.1
-------------

* FIX: when using stdin as a source of data, use sane error messages.

* FIX: error messages.

* Code optimalization.

version 0.2.0
-------------

* New option -t that allows to specify a packet filter program to filter out
irelevant packets on capdiss level.

* FIX: check stack size before each push. Not doing so leads to stack
overflows and segmentation faults.

* FIX: memory leak when loading Lua scripts from file.

* FIX: execution of Capdiss methods should be skipped or canceled if a
termination signal was caught prior or during their execution.

version 0.1.0
-------------

* Initial version release.

* Support for methods: Capdiss.begin (), Capdiss.each (), Capdiss.finish ().

* Load scripts from source (option -e) or from file (option -f).

